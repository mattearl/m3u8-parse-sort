name: Build and Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  pull_request_target:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Job for building, running tests, and linting on Linux
  build-and-test-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check code style
      run: cargo fmt --all -- --check

    - name: Lint code
      run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --release --verbose

    - name: Run tests
      run: cargo test --release --verbose

  # Job for building and packaging on Linux, Windows, and macOS
  build-and-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: cargo build --release --verbose

    - name: Package for Linux
      if: runner.os == 'Linux'
      run: tar -czvf m3u8-parse-sort-linux.tar.gz -C target/release m3u8-parse-sort

    - name: Package for Windows
      if: runner.os == 'Windows'
      run: 7z a m3u8-parse-sort-windows.zip target/release/m3u8-parse-sort.exe -r -y -ttar

    - name: Package for macOS
      if: runner.os == 'macOS'
      run: tar -czvf m3u8-parse-sort-macos.tar.gz -C target/release m3u8-parse-sort

    # Separate upload steps for each OS to ensure proper file handling
    - name: Upload Linux artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: m3u8-parse-sort-linux.tar.gz

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: m3u8-parse-sort-windows.zip

    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: m3u8-parse-sort-macos.tar.gz
